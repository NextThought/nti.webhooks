<!-- -*- mode: nxml -*- -->
<configure  xmlns="http://namespaces.zope.org/zope"
            xmlns:i18n="http://namespaces.zope.org/i18n"
            xmlns:zcml="http://namespaces.zope.org/zcml"
            xmlns:meta="http://namespaces.zope.org/meta"
            i18n_domain="nti.webhooks">

    <include package="zope.component" file="meta.zcml" />
    <include package="." file="meta.zcml" />

    <include package="zope.component" />
    <include package="zope.location" />
    <include package="zope.container" />
    <!-- make vocabularies go through zope.component -->
    <include package="zope.vocabularyregistry" />
    <!-- Permission vocabularies themselves -->
    <include package="zope.security" />

    <!-- Other helpful zope.component vocabs -->
    <include package="zope.componentvocabulary" />

    <!-- Needed to turn arbitrary objects into IComponentLookup, -->
    <!-- which is done when finding vocabularies -->
    <include package="zope.site" />

    <!-- Annotations, used for security. -->
    <include package="zope.annotation" />

    <!-- Traversing arbitrary objects, including many traversal adapters -->
    <include package="zope.traversing" />

    <!-- Run our schema installer on IDatabaseOpenedWithRoote -->
    <include package="zope.generations" />

    <!-- Basic externalization support -->
    <include package="nti.externalization" />

    <!-- The global subscription manager -->
    <utility component=".subscriptions.global_subscription_manager"
             provides=".interfaces.IWebhookSubscriptionManager" />

    <!-- Managing the size of subscription histories. -->
    <subscriber handler=".subscriptions.prune_subscription_when_resolved"
                trusted="true" />
    <!-- Deactivating subscriptions on certain conditions. -->
    <subscriber handler=".subscriptions.deactivate_subscription_when_all_failed"
                trusted="true" />
    <subscriber handler=".subscriptions.deactivate_subscription_when_applicable_limit_exceeded"
                trusted="true" />
    <!-- Internal state handling -->
    <subscriber handler=".subscriptions.sync_active_status_registered"
                trusted="true" />
    <subscriber handler=".subscriptions.sync_active_status_unregistered"
                trusted="true" />
    <subscriber handler=".subscriptions.deactivate_subscription_when_removed"
                trusted="true" />

    <!-- The default validator -->
    <utility factory=".destination_validator.DefaultDestinationValidator" />

    <!-- The default delivery manager -->
    <utility factory=".delivery_manager.getGlobalDeliveryManager" />

    <!-- The default dialect -->
    <utility factory=".dialect.DefaultWebhookDialect" />

    <!-- Persistent subscriptions from ZCML -->
    <utility factory=".generations.PersistentWebhookSchemaManager" />
    <subscriber handler=".generations.update_schema_manager" />

    <!-- Global event dispatchers are configured in subscribers.zcml -->

    <!-- Permissions that we use. -->
    <!-- These are duplicates, but that's OK: they are compared by ID -->
    <permission
        id="nti.actions.create"
        title="Create new object" />
    <permission
        id="nti.actions.delete"
        title="Delete existing object" />

    <subscriber handler=".subscribers.apply_security_to_subscription"
                trusted="true" />

</configure>
